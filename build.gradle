import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'java-library'
    id 'io.freefair.lombok' version "${lombokPluginVersion}"
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '7.1.0' apply(true)
}

apply plugin: 'java'

group = 'network.casper'
// Version number update for release
version='2.4.1'
sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
	mavenCentral()
    maven { url 'https://s01.oss.sonatype.org/content/repositories/snapshots' }
}

configurations {
    all*.exclude module: 'httpcore'
    all*.exclude module: 'httpcore-nio'
}

dependencies {
    implementation "dev.oak3:sbs4j:${sbs4jVersion}"
    implementation "io.github.oak:jsonrpc4j:${jsonrpc4jVersion}"
    implementation "com.syntifi.crypto:crypto-key-common:${cryptokeyVersion}"
    implementation "com.syntifi.crypto:crypto-key-ed25519:${cryptokeyVersion}"
    implementation "com.syntifi.crypto:crypto-key-secp256k1:${cryptokeyVersion}"
    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    implementation "org.javatuples:javatuples:${javaTuplesVersion}"
    implementation "joda-time:joda-time:${jodaTimeVersion}"
    compileOnly "org.apache.cxf:cxf-rt-rs-client:${cxfRtRsSseVersion}"
    compileOnly "org.apache.cxf:cxf-rt-rs-sse:${cxfRtRsSseVersion}"

    // log4j and slf4j
    compileOnly "org.slf4j:slf4j-api:${slf4jApiVersion}"
    testImplementation "commons-io:commons-io:${commonsIoVersion}"
    testImplementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    testImplementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    testImplementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    testImplementation "com.jayway.jsonpath:json-path-assert:${jsonPathAssertVersion}"
    testImplementation "com.squareup.okhttp3:mockwebserver:${mockwebserverVersion}"

    // Use JUnit Jupiter for testing.
    testImplementation "org.junit.jupiter:junit-jupiter:${jupiterVersion}"
    // Used to compare json strings while testing
    testImplementation "org.skyscreamer:jsonassert:${jsonassertVersion}"
}

publishing {
    repositories {
        maven {
            name = "Ammer-Tech"
            url = uri("https://maven.pkg.github.com/Ammer-Tech/publications")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        shadow(MavenPublication) { publication ->
            project.shadow.component(publication)
        }
    }
}

build.finalizedBy(shadowJar)

shadowJar{
    archiveClassifier.set('')
}
